/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RawFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RawFields\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields\",\"fields\":[{\"name\":\"TRANSACTION_TYPE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"GAZETTE_PUBLISHED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Gazette effective date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"CORRECTION_MARKER\",\"type\":[\"null\",\"string\"],\"doc\":\"The data output on an error transaction will be the same as the original transaction except with a new correction marker.  The transaction id is the best identifier if there are multiple transactions.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DOCUMENT_RECEIVED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Document received date\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence TRANSACTION_TYPE;
  /** Gazette effective date */
  @Deprecated public java.lang.CharSequence GAZETTE_PUBLISHED_DATE;
  /** The data output on an error transaction will be the same as the original transaction except with a new correction marker.  The transaction id is the best identifier if there are multiple transactions. */
  @Deprecated public java.lang.CharSequence CORRECTION_MARKER;
  /** Document received date */
  @Deprecated public java.lang.CharSequence DOCUMENT_RECEIVED_DATE;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RawFields() {}

  /**
   * All-args constructor.
   */
  public RawFields(java.lang.CharSequence TRANSACTION_TYPE, java.lang.CharSequence GAZETTE_PUBLISHED_DATE, java.lang.CharSequence CORRECTION_MARKER, java.lang.CharSequence DOCUMENT_RECEIVED_DATE) {
    this.TRANSACTION_TYPE = TRANSACTION_TYPE;
    this.GAZETTE_PUBLISHED_DATE = GAZETTE_PUBLISHED_DATE;
    this.CORRECTION_MARKER = CORRECTION_MARKER;
    this.DOCUMENT_RECEIVED_DATE = DOCUMENT_RECEIVED_DATE;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return TRANSACTION_TYPE;
    case 1: return GAZETTE_PUBLISHED_DATE;
    case 2: return CORRECTION_MARKER;
    case 3: return DOCUMENT_RECEIVED_DATE;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: TRANSACTION_TYPE = (java.lang.CharSequence)value$; break;
    case 1: GAZETTE_PUBLISHED_DATE = (java.lang.CharSequence)value$; break;
    case 2: CORRECTION_MARKER = (java.lang.CharSequence)value$; break;
    case 3: DOCUMENT_RECEIVED_DATE = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'TRANSACTION_TYPE' field.
   */
  public java.lang.CharSequence getTRANSACTIONTYPE() {
    return TRANSACTION_TYPE;
  }

  /**
   * Sets the value of the 'TRANSACTION_TYPE' field.
   * @param value the value to set.
   */
  public void setTRANSACTIONTYPE(java.lang.CharSequence value) {
    this.TRANSACTION_TYPE = value;
  }

  /**
   * Gets the value of the 'GAZETTE_PUBLISHED_DATE' field.
   * Gazette effective date   */
  public java.lang.CharSequence getGAZETTEPUBLISHEDDATE() {
    return GAZETTE_PUBLISHED_DATE;
  }

  /**
   * Sets the value of the 'GAZETTE_PUBLISHED_DATE' field.
   * Gazette effective date   * @param value the value to set.
   */
  public void setGAZETTEPUBLISHEDDATE(java.lang.CharSequence value) {
    this.GAZETTE_PUBLISHED_DATE = value;
  }

  /**
   * Gets the value of the 'CORRECTION_MARKER' field.
   * The data output on an error transaction will be the same as the original transaction except with a new correction marker.  The transaction id is the best identifier if there are multiple transactions.   */
  public java.lang.CharSequence getCORRECTIONMARKER() {
    return CORRECTION_MARKER;
  }

  /**
   * Sets the value of the 'CORRECTION_MARKER' field.
   * The data output on an error transaction will be the same as the original transaction except with a new correction marker.  The transaction id is the best identifier if there are multiple transactions.   * @param value the value to set.
   */
  public void setCORRECTIONMARKER(java.lang.CharSequence value) {
    this.CORRECTION_MARKER = value;
  }

  /**
   * Gets the value of the 'DOCUMENT_RECEIVED_DATE' field.
   * Document received date   */
  public java.lang.CharSequence getDOCUMENTRECEIVEDDATE() {
    return DOCUMENT_RECEIVED_DATE;
  }

  /**
   * Sets the value of the 'DOCUMENT_RECEIVED_DATE' field.
   * Document received date   * @param value the value to set.
   */
  public void setDOCUMENTRECEIVEDDATE(java.lang.CharSequence value) {
    this.DOCUMENT_RECEIVED_DATE = value;
  }

  /** Creates a new RawFields RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder();
  }
  
  /** Creates a new RawFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder other) {
    return new com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder(other);
  }
  
  /** Creates a new RawFields RecordBuilder by copying an existing RawFields instance */
  public static com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields other) {
    return new com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder(other);
  }
  
  /**
   * RecordBuilder for RawFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RawFields>
    implements org.apache.avro.data.RecordBuilder<RawFields> {

    private java.lang.CharSequence TRANSACTION_TYPE;
    private java.lang.CharSequence GAZETTE_PUBLISHED_DATE;
    private java.lang.CharSequence CORRECTION_MARKER;
    private java.lang.CharSequence DOCUMENT_RECEIVED_DATE;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.TRANSACTION_TYPE)) {
        this.TRANSACTION_TYPE = data().deepCopy(fields()[0].schema(), other.TRANSACTION_TYPE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.GAZETTE_PUBLISHED_DATE)) {
        this.GAZETTE_PUBLISHED_DATE = data().deepCopy(fields()[1].schema(), other.GAZETTE_PUBLISHED_DATE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CORRECTION_MARKER)) {
        this.CORRECTION_MARKER = data().deepCopy(fields()[2].schema(), other.CORRECTION_MARKER);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.DOCUMENT_RECEIVED_DATE)) {
        this.DOCUMENT_RECEIVED_DATE = data().deepCopy(fields()[3].schema(), other.DOCUMENT_RECEIVED_DATE);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RawFields instance */
    private Builder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields other) {
            super(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.SCHEMA$);
      if (isValidValue(fields()[0], other.TRANSACTION_TYPE)) {
        this.TRANSACTION_TYPE = data().deepCopy(fields()[0].schema(), other.TRANSACTION_TYPE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.GAZETTE_PUBLISHED_DATE)) {
        this.GAZETTE_PUBLISHED_DATE = data().deepCopy(fields()[1].schema(), other.GAZETTE_PUBLISHED_DATE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CORRECTION_MARKER)) {
        this.CORRECTION_MARKER = data().deepCopy(fields()[2].schema(), other.CORRECTION_MARKER);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.DOCUMENT_RECEIVED_DATE)) {
        this.DOCUMENT_RECEIVED_DATE = data().deepCopy(fields()[3].schema(), other.DOCUMENT_RECEIVED_DATE);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'TRANSACTION_TYPE' field */
    public java.lang.CharSequence getTRANSACTIONTYPE() {
      return TRANSACTION_TYPE;
    }
    
    /** Sets the value of the 'TRANSACTION_TYPE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder setTRANSACTIONTYPE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.TRANSACTION_TYPE = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'TRANSACTION_TYPE' field has been set */
    public boolean hasTRANSACTIONTYPE() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'TRANSACTION_TYPE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder clearTRANSACTIONTYPE() {
      TRANSACTION_TYPE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'GAZETTE_PUBLISHED_DATE' field */
    public java.lang.CharSequence getGAZETTEPUBLISHEDDATE() {
      return GAZETTE_PUBLISHED_DATE;
    }
    
    /** Sets the value of the 'GAZETTE_PUBLISHED_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder setGAZETTEPUBLISHEDDATE(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.GAZETTE_PUBLISHED_DATE = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'GAZETTE_PUBLISHED_DATE' field has been set */
    public boolean hasGAZETTEPUBLISHEDDATE() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'GAZETTE_PUBLISHED_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder clearGAZETTEPUBLISHEDDATE() {
      GAZETTE_PUBLISHED_DATE = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'CORRECTION_MARKER' field */
    public java.lang.CharSequence getCORRECTIONMARKER() {
      return CORRECTION_MARKER;
    }
    
    /** Sets the value of the 'CORRECTION_MARKER' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder setCORRECTIONMARKER(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.CORRECTION_MARKER = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'CORRECTION_MARKER' field has been set */
    public boolean hasCORRECTIONMARKER() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'CORRECTION_MARKER' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder clearCORRECTIONMARKER() {
      CORRECTION_MARKER = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'DOCUMENT_RECEIVED_DATE' field */
    public java.lang.CharSequence getDOCUMENTRECEIVEDDATE() {
      return DOCUMENT_RECEIVED_DATE;
    }
    
    /** Sets the value of the 'DOCUMENT_RECEIVED_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder setDOCUMENTRECEIVEDDATE(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.DOCUMENT_RECEIVED_DATE = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'DOCUMENT_RECEIVED_DATE' field has been set */
    public boolean hasDOCUMENTRECEIVEDDATE() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'DOCUMENT_RECEIVED_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.history.rawfields.RawFields.Builder clearDOCUMENTRECEIVEDDATE() {
      DOCUMENT_RECEIVED_DATE = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public RawFields build() {
      try {
        RawFields record = new RawFields();
        record.TRANSACTION_TYPE = fieldSetFlags()[0] ? this.TRANSACTION_TYPE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.GAZETTE_PUBLISHED_DATE = fieldSetFlags()[1] ? this.GAZETTE_PUBLISHED_DATE : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.CORRECTION_MARKER = fieldSetFlags()[2] ? this.CORRECTION_MARKER : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.DOCUMENT_RECEIVED_DATE = fieldSetFlags()[3] ? this.DOCUMENT_RECEIVED_DATE : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
