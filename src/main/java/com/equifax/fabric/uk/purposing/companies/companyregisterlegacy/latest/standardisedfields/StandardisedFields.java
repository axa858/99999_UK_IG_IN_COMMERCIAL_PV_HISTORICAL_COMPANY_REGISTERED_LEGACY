/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StandardisedFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StandardisedFields\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields\",\"fields\":[{\"name\":\"COMPANY_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised Company Name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PROCESSING_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date on which data loaded on Data Fabric\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_HOUSE_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address house number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_STREET\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address street\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_AREA\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address area\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_POST_TOWN\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address posttown\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_REGION\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address region\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_COUNTRY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address country\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_POSTCODE\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address postcode\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_CARE_OF\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address careof\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_SUPPLIED_COMPANY_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address supplied company name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ADDRESS_PO_BOX\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised address po box\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FORMAT_OF_SUPPLY\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates format of supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MIGRATION_FLAG\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DATE_OF_RESTORE\",\"type\":[\"null\",\"string\"],\"doc\":\"Company restoration date after dissolution\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"TAPE_REFERENCE_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique number assigned by Companies House to each supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"entity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"entityFields\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity\",\"fields\":[{\"name\":\"commercial\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"commercialFields\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.commercial\",\"fields\":[{\"name\":\"legacyIds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"legacyIdFields\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.commercial.legacyids\",\"fields\":[{\"name\":\"LEGACY_ID_COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Company Number\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"identifiers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"identifierFields\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.commercial.identifiers\",\"fields\":[{\"name\":\"NAME_BUSINESS_COMPANY_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of company - L for Limited\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_VAT\",\"type\":[\"null\",\"string\"],\"doc\":\"VAT number field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_EMAIL\",\"type\":[\"null\",\"string\"],\"doc\":\"EMAIL ID field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DISSOLVED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Dissolution Date field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_INCORPORATION_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date of incorporation in CCYYMMDD format\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_UPDATE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"This is load date and will be a system date \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DATA_SOURCE\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates source of data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"website\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Websites\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"phones\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Phone number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"names\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised Company Names as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised postcode as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Standardised Company Name */
  @Deprecated public java.lang.CharSequence COMPANY_NAME;
  /** Date on which data loaded on Data Fabric */
  @Deprecated public java.lang.CharSequence PROCESSING_DATE;
  /** Standardised address house number */
  @Deprecated public java.lang.CharSequence ADDRESS_HOUSE_NUMBER;
  /** Standardised address street */
  @Deprecated public java.lang.CharSequence ADDRESS_STREET;
  /** Standardised address area */
  @Deprecated public java.lang.CharSequence ADDRESS_AREA;
  /** Standardised address posttown */
  @Deprecated public java.lang.CharSequence ADDRESS_POST_TOWN;
  /** Standardised address region */
  @Deprecated public java.lang.CharSequence ADDRESS_REGION;
  /** Standardised address country */
  @Deprecated public java.lang.CharSequence ADDRESS_COUNTRY;
  /** Standardised address postcode */
  @Deprecated public java.lang.CharSequence ADDRESS_POSTCODE;
  /** Standardised address careof */
  @Deprecated public java.lang.CharSequence ADDRESS_CARE_OF;
  /** Standardised address supplied company name */
  @Deprecated public java.lang.CharSequence ADDRESS_SUPPLIED_COMPANY_NAME;
  /** Standardised address po box */
  @Deprecated public java.lang.CharSequence ADDRESS_PO_BOX;
  /** Indicates format of supplied file */
  @Deprecated public java.lang.CharSequence FORMAT_OF_SUPPLY;
  /** Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live */
  @Deprecated public java.lang.CharSequence MIGRATION_FLAG;
  /** Company restoration date after dissolution */
  @Deprecated public java.lang.CharSequence DATE_OF_RESTORE;
  /** Unique number assigned by Companies House to each supplied file */
  @Deprecated public java.lang.CharSequence TAPE_REFERENCE_NUMBER;
  @Deprecated public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields entity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StandardisedFields() {}

  /**
   * All-args constructor.
   */
  public StandardisedFields(java.lang.CharSequence COMPANY_NAME, java.lang.CharSequence PROCESSING_DATE, java.lang.CharSequence ADDRESS_HOUSE_NUMBER, java.lang.CharSequence ADDRESS_STREET, java.lang.CharSequence ADDRESS_AREA, java.lang.CharSequence ADDRESS_POST_TOWN, java.lang.CharSequence ADDRESS_REGION, java.lang.CharSequence ADDRESS_COUNTRY, java.lang.CharSequence ADDRESS_POSTCODE, java.lang.CharSequence ADDRESS_CARE_OF, java.lang.CharSequence ADDRESS_SUPPLIED_COMPANY_NAME, java.lang.CharSequence ADDRESS_PO_BOX, java.lang.CharSequence FORMAT_OF_SUPPLY, java.lang.CharSequence MIGRATION_FLAG, java.lang.CharSequence DATE_OF_RESTORE, java.lang.CharSequence TAPE_REFERENCE_NUMBER, com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields entity) {
    this.COMPANY_NAME = COMPANY_NAME;
    this.PROCESSING_DATE = PROCESSING_DATE;
    this.ADDRESS_HOUSE_NUMBER = ADDRESS_HOUSE_NUMBER;
    this.ADDRESS_STREET = ADDRESS_STREET;
    this.ADDRESS_AREA = ADDRESS_AREA;
    this.ADDRESS_POST_TOWN = ADDRESS_POST_TOWN;
    this.ADDRESS_REGION = ADDRESS_REGION;
    this.ADDRESS_COUNTRY = ADDRESS_COUNTRY;
    this.ADDRESS_POSTCODE = ADDRESS_POSTCODE;
    this.ADDRESS_CARE_OF = ADDRESS_CARE_OF;
    this.ADDRESS_SUPPLIED_COMPANY_NAME = ADDRESS_SUPPLIED_COMPANY_NAME;
    this.ADDRESS_PO_BOX = ADDRESS_PO_BOX;
    this.FORMAT_OF_SUPPLY = FORMAT_OF_SUPPLY;
    this.MIGRATION_FLAG = MIGRATION_FLAG;
    this.DATE_OF_RESTORE = DATE_OF_RESTORE;
    this.TAPE_REFERENCE_NUMBER = TAPE_REFERENCE_NUMBER;
    this.entity = entity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return COMPANY_NAME;
    case 1: return PROCESSING_DATE;
    case 2: return ADDRESS_HOUSE_NUMBER;
    case 3: return ADDRESS_STREET;
    case 4: return ADDRESS_AREA;
    case 5: return ADDRESS_POST_TOWN;
    case 6: return ADDRESS_REGION;
    case 7: return ADDRESS_COUNTRY;
    case 8: return ADDRESS_POSTCODE;
    case 9: return ADDRESS_CARE_OF;
    case 10: return ADDRESS_SUPPLIED_COMPANY_NAME;
    case 11: return ADDRESS_PO_BOX;
    case 12: return FORMAT_OF_SUPPLY;
    case 13: return MIGRATION_FLAG;
    case 14: return DATE_OF_RESTORE;
    case 15: return TAPE_REFERENCE_NUMBER;
    case 16: return entity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: COMPANY_NAME = (java.lang.CharSequence)value$; break;
    case 1: PROCESSING_DATE = (java.lang.CharSequence)value$; break;
    case 2: ADDRESS_HOUSE_NUMBER = (java.lang.CharSequence)value$; break;
    case 3: ADDRESS_STREET = (java.lang.CharSequence)value$; break;
    case 4: ADDRESS_AREA = (java.lang.CharSequence)value$; break;
    case 5: ADDRESS_POST_TOWN = (java.lang.CharSequence)value$; break;
    case 6: ADDRESS_REGION = (java.lang.CharSequence)value$; break;
    case 7: ADDRESS_COUNTRY = (java.lang.CharSequence)value$; break;
    case 8: ADDRESS_POSTCODE = (java.lang.CharSequence)value$; break;
    case 9: ADDRESS_CARE_OF = (java.lang.CharSequence)value$; break;
    case 10: ADDRESS_SUPPLIED_COMPANY_NAME = (java.lang.CharSequence)value$; break;
    case 11: ADDRESS_PO_BOX = (java.lang.CharSequence)value$; break;
    case 12: FORMAT_OF_SUPPLY = (java.lang.CharSequence)value$; break;
    case 13: MIGRATION_FLAG = (java.lang.CharSequence)value$; break;
    case 14: DATE_OF_RESTORE = (java.lang.CharSequence)value$; break;
    case 15: TAPE_REFERENCE_NUMBER = (java.lang.CharSequence)value$; break;
    case 16: entity = (com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'COMPANY_NAME' field.
   * Standardised Company Name   */
  public java.lang.CharSequence getCOMPANYNAME() {
    return COMPANY_NAME;
  }

  /**
   * Sets the value of the 'COMPANY_NAME' field.
   * Standardised Company Name   * @param value the value to set.
   */
  public void setCOMPANYNAME(java.lang.CharSequence value) {
    this.COMPANY_NAME = value;
  }

  /**
   * Gets the value of the 'PROCESSING_DATE' field.
   * Date on which data loaded on Data Fabric   */
  public java.lang.CharSequence getPROCESSINGDATE() {
    return PROCESSING_DATE;
  }

  /**
   * Sets the value of the 'PROCESSING_DATE' field.
   * Date on which data loaded on Data Fabric   * @param value the value to set.
   */
  public void setPROCESSINGDATE(java.lang.CharSequence value) {
    this.PROCESSING_DATE = value;
  }

  /**
   * Gets the value of the 'ADDRESS_HOUSE_NUMBER' field.
   * Standardised address house number   */
  public java.lang.CharSequence getADDRESSHOUSENUMBER() {
    return ADDRESS_HOUSE_NUMBER;
  }

  /**
   * Sets the value of the 'ADDRESS_HOUSE_NUMBER' field.
   * Standardised address house number   * @param value the value to set.
   */
  public void setADDRESSHOUSENUMBER(java.lang.CharSequence value) {
    this.ADDRESS_HOUSE_NUMBER = value;
  }

  /**
   * Gets the value of the 'ADDRESS_STREET' field.
   * Standardised address street   */
  public java.lang.CharSequence getADDRESSSTREET() {
    return ADDRESS_STREET;
  }

  /**
   * Sets the value of the 'ADDRESS_STREET' field.
   * Standardised address street   * @param value the value to set.
   */
  public void setADDRESSSTREET(java.lang.CharSequence value) {
    this.ADDRESS_STREET = value;
  }

  /**
   * Gets the value of the 'ADDRESS_AREA' field.
   * Standardised address area   */
  public java.lang.CharSequence getADDRESSAREA() {
    return ADDRESS_AREA;
  }

  /**
   * Sets the value of the 'ADDRESS_AREA' field.
   * Standardised address area   * @param value the value to set.
   */
  public void setADDRESSAREA(java.lang.CharSequence value) {
    this.ADDRESS_AREA = value;
  }

  /**
   * Gets the value of the 'ADDRESS_POST_TOWN' field.
   * Standardised address posttown   */
  public java.lang.CharSequence getADDRESSPOSTTOWN() {
    return ADDRESS_POST_TOWN;
  }

  /**
   * Sets the value of the 'ADDRESS_POST_TOWN' field.
   * Standardised address posttown   * @param value the value to set.
   */
  public void setADDRESSPOSTTOWN(java.lang.CharSequence value) {
    this.ADDRESS_POST_TOWN = value;
  }

  /**
   * Gets the value of the 'ADDRESS_REGION' field.
   * Standardised address region   */
  public java.lang.CharSequence getADDRESSREGION() {
    return ADDRESS_REGION;
  }

  /**
   * Sets the value of the 'ADDRESS_REGION' field.
   * Standardised address region   * @param value the value to set.
   */
  public void setADDRESSREGION(java.lang.CharSequence value) {
    this.ADDRESS_REGION = value;
  }

  /**
   * Gets the value of the 'ADDRESS_COUNTRY' field.
   * Standardised address country   */
  public java.lang.CharSequence getADDRESSCOUNTRY() {
    return ADDRESS_COUNTRY;
  }

  /**
   * Sets the value of the 'ADDRESS_COUNTRY' field.
   * Standardised address country   * @param value the value to set.
   */
  public void setADDRESSCOUNTRY(java.lang.CharSequence value) {
    this.ADDRESS_COUNTRY = value;
  }

  /**
   * Gets the value of the 'ADDRESS_POSTCODE' field.
   * Standardised address postcode   */
  public java.lang.CharSequence getADDRESSPOSTCODE() {
    return ADDRESS_POSTCODE;
  }

  /**
   * Sets the value of the 'ADDRESS_POSTCODE' field.
   * Standardised address postcode   * @param value the value to set.
   */
  public void setADDRESSPOSTCODE(java.lang.CharSequence value) {
    this.ADDRESS_POSTCODE = value;
  }

  /**
   * Gets the value of the 'ADDRESS_CARE_OF' field.
   * Standardised address careof   */
  public java.lang.CharSequence getADDRESSCAREOF() {
    return ADDRESS_CARE_OF;
  }

  /**
   * Sets the value of the 'ADDRESS_CARE_OF' field.
   * Standardised address careof   * @param value the value to set.
   */
  public void setADDRESSCAREOF(java.lang.CharSequence value) {
    this.ADDRESS_CARE_OF = value;
  }

  /**
   * Gets the value of the 'ADDRESS_SUPPLIED_COMPANY_NAME' field.
   * Standardised address supplied company name   */
  public java.lang.CharSequence getADDRESSSUPPLIEDCOMPANYNAME() {
    return ADDRESS_SUPPLIED_COMPANY_NAME;
  }

  /**
   * Sets the value of the 'ADDRESS_SUPPLIED_COMPANY_NAME' field.
   * Standardised address supplied company name   * @param value the value to set.
   */
  public void setADDRESSSUPPLIEDCOMPANYNAME(java.lang.CharSequence value) {
    this.ADDRESS_SUPPLIED_COMPANY_NAME = value;
  }

  /**
   * Gets the value of the 'ADDRESS_PO_BOX' field.
   * Standardised address po box   */
  public java.lang.CharSequence getADDRESSPOBOX() {
    return ADDRESS_PO_BOX;
  }

  /**
   * Sets the value of the 'ADDRESS_PO_BOX' field.
   * Standardised address po box   * @param value the value to set.
   */
  public void setADDRESSPOBOX(java.lang.CharSequence value) {
    this.ADDRESS_PO_BOX = value;
  }

  /**
   * Gets the value of the 'FORMAT_OF_SUPPLY' field.
   * Indicates format of supplied file   */
  public java.lang.CharSequence getFORMATOFSUPPLY() {
    return FORMAT_OF_SUPPLY;
  }

  /**
   * Sets the value of the 'FORMAT_OF_SUPPLY' field.
   * Indicates format of supplied file   * @param value the value to set.
   */
  public void setFORMATOFSUPPLY(java.lang.CharSequence value) {
    this.FORMAT_OF_SUPPLY = value;
  }

  /**
   * Gets the value of the 'MIGRATION_FLAG' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   */
  public java.lang.CharSequence getMIGRATIONFLAG() {
    return MIGRATION_FLAG;
  }

  /**
   * Sets the value of the 'MIGRATION_FLAG' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   * @param value the value to set.
   */
  public void setMIGRATIONFLAG(java.lang.CharSequence value) {
    this.MIGRATION_FLAG = value;
  }

  /**
   * Gets the value of the 'DATE_OF_RESTORE' field.
   * Company restoration date after dissolution   */
  public java.lang.CharSequence getDATEOFRESTORE() {
    return DATE_OF_RESTORE;
  }

  /**
   * Sets the value of the 'DATE_OF_RESTORE' field.
   * Company restoration date after dissolution   * @param value the value to set.
   */
  public void setDATEOFRESTORE(java.lang.CharSequence value) {
    this.DATE_OF_RESTORE = value;
  }

  /**
   * Gets the value of the 'TAPE_REFERENCE_NUMBER' field.
   * Unique number assigned by Companies House to each supplied file   */
  public java.lang.CharSequence getTAPEREFERENCENUMBER() {
    return TAPE_REFERENCE_NUMBER;
  }

  /**
   * Sets the value of the 'TAPE_REFERENCE_NUMBER' field.
   * Unique number assigned by Companies House to each supplied file   * @param value the value to set.
   */
  public void setTAPEREFERENCENUMBER(java.lang.CharSequence value) {
    this.TAPE_REFERENCE_NUMBER = value;
  }

  /**
   * Gets the value of the 'entity' field.
   */
  public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields getEntity() {
    return entity;
  }

  /**
   * Sets the value of the 'entity' field.
   * @param value the value to set.
   */
  public void setEntity(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields value) {
    this.entity = value;
  }

  /** Creates a new StandardisedFields RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder();
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder other) {
    return new com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing StandardisedFields instance */
  public static com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields other) {
    return new com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /**
   * RecordBuilder for StandardisedFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StandardisedFields>
    implements org.apache.avro.data.RecordBuilder<StandardisedFields> {

    private java.lang.CharSequence COMPANY_NAME;
    private java.lang.CharSequence PROCESSING_DATE;
    private java.lang.CharSequence ADDRESS_HOUSE_NUMBER;
    private java.lang.CharSequence ADDRESS_STREET;
    private java.lang.CharSequence ADDRESS_AREA;
    private java.lang.CharSequence ADDRESS_POST_TOWN;
    private java.lang.CharSequence ADDRESS_REGION;
    private java.lang.CharSequence ADDRESS_COUNTRY;
    private java.lang.CharSequence ADDRESS_POSTCODE;
    private java.lang.CharSequence ADDRESS_CARE_OF;
    private java.lang.CharSequence ADDRESS_SUPPLIED_COMPANY_NAME;
    private java.lang.CharSequence ADDRESS_PO_BOX;
    private java.lang.CharSequence FORMAT_OF_SUPPLY;
    private java.lang.CharSequence MIGRATION_FLAG;
    private java.lang.CharSequence DATE_OF_RESTORE;
    private java.lang.CharSequence TAPE_REFERENCE_NUMBER;
    private com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields entity;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.COMPANY_NAME)) {
        this.COMPANY_NAME = data().deepCopy(fields()[0].schema(), other.COMPANY_NAME);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PROCESSING_DATE)) {
        this.PROCESSING_DATE = data().deepCopy(fields()[1].schema(), other.PROCESSING_DATE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ADDRESS_HOUSE_NUMBER)) {
        this.ADDRESS_HOUSE_NUMBER = data().deepCopy(fields()[2].schema(), other.ADDRESS_HOUSE_NUMBER);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ADDRESS_STREET)) {
        this.ADDRESS_STREET = data().deepCopy(fields()[3].schema(), other.ADDRESS_STREET);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ADDRESS_AREA)) {
        this.ADDRESS_AREA = data().deepCopy(fields()[4].schema(), other.ADDRESS_AREA);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ADDRESS_POST_TOWN)) {
        this.ADDRESS_POST_TOWN = data().deepCopy(fields()[5].schema(), other.ADDRESS_POST_TOWN);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ADDRESS_REGION)) {
        this.ADDRESS_REGION = data().deepCopy(fields()[6].schema(), other.ADDRESS_REGION);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ADDRESS_COUNTRY)) {
        this.ADDRESS_COUNTRY = data().deepCopy(fields()[7].schema(), other.ADDRESS_COUNTRY);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ADDRESS_POSTCODE)) {
        this.ADDRESS_POSTCODE = data().deepCopy(fields()[8].schema(), other.ADDRESS_POSTCODE);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.ADDRESS_CARE_OF)) {
        this.ADDRESS_CARE_OF = data().deepCopy(fields()[9].schema(), other.ADDRESS_CARE_OF);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ADDRESS_SUPPLIED_COMPANY_NAME)) {
        this.ADDRESS_SUPPLIED_COMPANY_NAME = data().deepCopy(fields()[10].schema(), other.ADDRESS_SUPPLIED_COMPANY_NAME);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ADDRESS_PO_BOX)) {
        this.ADDRESS_PO_BOX = data().deepCopy(fields()[11].schema(), other.ADDRESS_PO_BOX);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.FORMAT_OF_SUPPLY)) {
        this.FORMAT_OF_SUPPLY = data().deepCopy(fields()[12].schema(), other.FORMAT_OF_SUPPLY);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.MIGRATION_FLAG)) {
        this.MIGRATION_FLAG = data().deepCopy(fields()[13].schema(), other.MIGRATION_FLAG);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.DATE_OF_RESTORE)) {
        this.DATE_OF_RESTORE = data().deepCopy(fields()[14].schema(), other.DATE_OF_RESTORE);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.TAPE_REFERENCE_NUMBER)) {
        this.TAPE_REFERENCE_NUMBER = data().deepCopy(fields()[15].schema(), other.TAPE_REFERENCE_NUMBER);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.entity)) {
        this.entity = data().deepCopy(fields()[16].schema(), other.entity);
        fieldSetFlags()[16] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StandardisedFields instance */
    private Builder(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields other) {
            super(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.SCHEMA$);
      if (isValidValue(fields()[0], other.COMPANY_NAME)) {
        this.COMPANY_NAME = data().deepCopy(fields()[0].schema(), other.COMPANY_NAME);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PROCESSING_DATE)) {
        this.PROCESSING_DATE = data().deepCopy(fields()[1].schema(), other.PROCESSING_DATE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ADDRESS_HOUSE_NUMBER)) {
        this.ADDRESS_HOUSE_NUMBER = data().deepCopy(fields()[2].schema(), other.ADDRESS_HOUSE_NUMBER);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ADDRESS_STREET)) {
        this.ADDRESS_STREET = data().deepCopy(fields()[3].schema(), other.ADDRESS_STREET);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ADDRESS_AREA)) {
        this.ADDRESS_AREA = data().deepCopy(fields()[4].schema(), other.ADDRESS_AREA);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ADDRESS_POST_TOWN)) {
        this.ADDRESS_POST_TOWN = data().deepCopy(fields()[5].schema(), other.ADDRESS_POST_TOWN);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ADDRESS_REGION)) {
        this.ADDRESS_REGION = data().deepCopy(fields()[6].schema(), other.ADDRESS_REGION);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ADDRESS_COUNTRY)) {
        this.ADDRESS_COUNTRY = data().deepCopy(fields()[7].schema(), other.ADDRESS_COUNTRY);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ADDRESS_POSTCODE)) {
        this.ADDRESS_POSTCODE = data().deepCopy(fields()[8].schema(), other.ADDRESS_POSTCODE);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.ADDRESS_CARE_OF)) {
        this.ADDRESS_CARE_OF = data().deepCopy(fields()[9].schema(), other.ADDRESS_CARE_OF);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ADDRESS_SUPPLIED_COMPANY_NAME)) {
        this.ADDRESS_SUPPLIED_COMPANY_NAME = data().deepCopy(fields()[10].schema(), other.ADDRESS_SUPPLIED_COMPANY_NAME);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ADDRESS_PO_BOX)) {
        this.ADDRESS_PO_BOX = data().deepCopy(fields()[11].schema(), other.ADDRESS_PO_BOX);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.FORMAT_OF_SUPPLY)) {
        this.FORMAT_OF_SUPPLY = data().deepCopy(fields()[12].schema(), other.FORMAT_OF_SUPPLY);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.MIGRATION_FLAG)) {
        this.MIGRATION_FLAG = data().deepCopy(fields()[13].schema(), other.MIGRATION_FLAG);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.DATE_OF_RESTORE)) {
        this.DATE_OF_RESTORE = data().deepCopy(fields()[14].schema(), other.DATE_OF_RESTORE);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.TAPE_REFERENCE_NUMBER)) {
        this.TAPE_REFERENCE_NUMBER = data().deepCopy(fields()[15].schema(), other.TAPE_REFERENCE_NUMBER);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.entity)) {
        this.entity = data().deepCopy(fields()[16].schema(), other.entity);
        fieldSetFlags()[16] = true;
      }
    }

    /** Gets the value of the 'COMPANY_NAME' field */
    public java.lang.CharSequence getCOMPANYNAME() {
      return COMPANY_NAME;
    }
    
    /** Sets the value of the 'COMPANY_NAME' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setCOMPANYNAME(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.COMPANY_NAME = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'COMPANY_NAME' field has been set */
    public boolean hasCOMPANYNAME() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'COMPANY_NAME' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearCOMPANYNAME() {
      COMPANY_NAME = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'PROCESSING_DATE' field */
    public java.lang.CharSequence getPROCESSINGDATE() {
      return PROCESSING_DATE;
    }
    
    /** Sets the value of the 'PROCESSING_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setPROCESSINGDATE(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.PROCESSING_DATE = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'PROCESSING_DATE' field has been set */
    public boolean hasPROCESSINGDATE() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'PROCESSING_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearPROCESSINGDATE() {
      PROCESSING_DATE = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_HOUSE_NUMBER' field */
    public java.lang.CharSequence getADDRESSHOUSENUMBER() {
      return ADDRESS_HOUSE_NUMBER;
    }
    
    /** Sets the value of the 'ADDRESS_HOUSE_NUMBER' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSHOUSENUMBER(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ADDRESS_HOUSE_NUMBER = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_HOUSE_NUMBER' field has been set */
    public boolean hasADDRESSHOUSENUMBER() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ADDRESS_HOUSE_NUMBER' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSHOUSENUMBER() {
      ADDRESS_HOUSE_NUMBER = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_STREET' field */
    public java.lang.CharSequence getADDRESSSTREET() {
      return ADDRESS_STREET;
    }
    
    /** Sets the value of the 'ADDRESS_STREET' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSSTREET(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.ADDRESS_STREET = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_STREET' field has been set */
    public boolean hasADDRESSSTREET() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'ADDRESS_STREET' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSSTREET() {
      ADDRESS_STREET = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_AREA' field */
    public java.lang.CharSequence getADDRESSAREA() {
      return ADDRESS_AREA;
    }
    
    /** Sets the value of the 'ADDRESS_AREA' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSAREA(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ADDRESS_AREA = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_AREA' field has been set */
    public boolean hasADDRESSAREA() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'ADDRESS_AREA' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSAREA() {
      ADDRESS_AREA = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_POST_TOWN' field */
    public java.lang.CharSequence getADDRESSPOSTTOWN() {
      return ADDRESS_POST_TOWN;
    }
    
    /** Sets the value of the 'ADDRESS_POST_TOWN' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSPOSTTOWN(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.ADDRESS_POST_TOWN = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_POST_TOWN' field has been set */
    public boolean hasADDRESSPOSTTOWN() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'ADDRESS_POST_TOWN' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSPOSTTOWN() {
      ADDRESS_POST_TOWN = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_REGION' field */
    public java.lang.CharSequence getADDRESSREGION() {
      return ADDRESS_REGION;
    }
    
    /** Sets the value of the 'ADDRESS_REGION' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSREGION(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.ADDRESS_REGION = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_REGION' field has been set */
    public boolean hasADDRESSREGION() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'ADDRESS_REGION' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSREGION() {
      ADDRESS_REGION = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_COUNTRY' field */
    public java.lang.CharSequence getADDRESSCOUNTRY() {
      return ADDRESS_COUNTRY;
    }
    
    /** Sets the value of the 'ADDRESS_COUNTRY' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSCOUNTRY(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.ADDRESS_COUNTRY = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_COUNTRY' field has been set */
    public boolean hasADDRESSCOUNTRY() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'ADDRESS_COUNTRY' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSCOUNTRY() {
      ADDRESS_COUNTRY = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_POSTCODE' field */
    public java.lang.CharSequence getADDRESSPOSTCODE() {
      return ADDRESS_POSTCODE;
    }
    
    /** Sets the value of the 'ADDRESS_POSTCODE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSPOSTCODE(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.ADDRESS_POSTCODE = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_POSTCODE' field has been set */
    public boolean hasADDRESSPOSTCODE() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'ADDRESS_POSTCODE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSPOSTCODE() {
      ADDRESS_POSTCODE = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_CARE_OF' field */
    public java.lang.CharSequence getADDRESSCAREOF() {
      return ADDRESS_CARE_OF;
    }
    
    /** Sets the value of the 'ADDRESS_CARE_OF' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSCAREOF(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.ADDRESS_CARE_OF = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_CARE_OF' field has been set */
    public boolean hasADDRESSCAREOF() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'ADDRESS_CARE_OF' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSCAREOF() {
      ADDRESS_CARE_OF = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_SUPPLIED_COMPANY_NAME' field */
    public java.lang.CharSequence getADDRESSSUPPLIEDCOMPANYNAME() {
      return ADDRESS_SUPPLIED_COMPANY_NAME;
    }
    
    /** Sets the value of the 'ADDRESS_SUPPLIED_COMPANY_NAME' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSSUPPLIEDCOMPANYNAME(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.ADDRESS_SUPPLIED_COMPANY_NAME = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_SUPPLIED_COMPANY_NAME' field has been set */
    public boolean hasADDRESSSUPPLIEDCOMPANYNAME() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'ADDRESS_SUPPLIED_COMPANY_NAME' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSSUPPLIEDCOMPANYNAME() {
      ADDRESS_SUPPLIED_COMPANY_NAME = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'ADDRESS_PO_BOX' field */
    public java.lang.CharSequence getADDRESSPOBOX() {
      return ADDRESS_PO_BOX;
    }
    
    /** Sets the value of the 'ADDRESS_PO_BOX' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setADDRESSPOBOX(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.ADDRESS_PO_BOX = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'ADDRESS_PO_BOX' field has been set */
    public boolean hasADDRESSPOBOX() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'ADDRESS_PO_BOX' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearADDRESSPOBOX() {
      ADDRESS_PO_BOX = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'FORMAT_OF_SUPPLY' field */
    public java.lang.CharSequence getFORMATOFSUPPLY() {
      return FORMAT_OF_SUPPLY;
    }
    
    /** Sets the value of the 'FORMAT_OF_SUPPLY' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setFORMATOFSUPPLY(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.FORMAT_OF_SUPPLY = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'FORMAT_OF_SUPPLY' field has been set */
    public boolean hasFORMATOFSUPPLY() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'FORMAT_OF_SUPPLY' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearFORMATOFSUPPLY() {
      FORMAT_OF_SUPPLY = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'MIGRATION_FLAG' field */
    public java.lang.CharSequence getMIGRATIONFLAG() {
      return MIGRATION_FLAG;
    }
    
    /** Sets the value of the 'MIGRATION_FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setMIGRATIONFLAG(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.MIGRATION_FLAG = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'MIGRATION_FLAG' field has been set */
    public boolean hasMIGRATIONFLAG() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'MIGRATION_FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearMIGRATIONFLAG() {
      MIGRATION_FLAG = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'DATE_OF_RESTORE' field */
    public java.lang.CharSequence getDATEOFRESTORE() {
      return DATE_OF_RESTORE;
    }
    
    /** Sets the value of the 'DATE_OF_RESTORE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setDATEOFRESTORE(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.DATE_OF_RESTORE = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'DATE_OF_RESTORE' field has been set */
    public boolean hasDATEOFRESTORE() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'DATE_OF_RESTORE' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearDATEOFRESTORE() {
      DATE_OF_RESTORE = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'TAPE_REFERENCE_NUMBER' field */
    public java.lang.CharSequence getTAPEREFERENCENUMBER() {
      return TAPE_REFERENCE_NUMBER;
    }
    
    /** Sets the value of the 'TAPE_REFERENCE_NUMBER' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setTAPEREFERENCENUMBER(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.TAPE_REFERENCE_NUMBER = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'TAPE_REFERENCE_NUMBER' field has been set */
    public boolean hasTAPEREFERENCENUMBER() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'TAPE_REFERENCE_NUMBER' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearTAPEREFERENCENUMBER() {
      TAPE_REFERENCE_NUMBER = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'entity' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields getEntity() {
      return entity;
    }
    
    /** Sets the value of the 'entity' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder setEntity(com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields value) {
      validate(fields()[16], value);
      this.entity = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'entity' field has been set */
    public boolean hasEntity() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'entity' field */
    public com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.StandardisedFields.Builder clearEntity() {
      entity = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    public StandardisedFields build() {
      try {
        StandardisedFields record = new StandardisedFields();
        record.COMPANY_NAME = fieldSetFlags()[0] ? this.COMPANY_NAME : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.PROCESSING_DATE = fieldSetFlags()[1] ? this.PROCESSING_DATE : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ADDRESS_HOUSE_NUMBER = fieldSetFlags()[2] ? this.ADDRESS_HOUSE_NUMBER : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.ADDRESS_STREET = fieldSetFlags()[3] ? this.ADDRESS_STREET : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ADDRESS_AREA = fieldSetFlags()[4] ? this.ADDRESS_AREA : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.ADDRESS_POST_TOWN = fieldSetFlags()[5] ? this.ADDRESS_POST_TOWN : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.ADDRESS_REGION = fieldSetFlags()[6] ? this.ADDRESS_REGION : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.ADDRESS_COUNTRY = fieldSetFlags()[7] ? this.ADDRESS_COUNTRY : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.ADDRESS_POSTCODE = fieldSetFlags()[8] ? this.ADDRESS_POSTCODE : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.ADDRESS_CARE_OF = fieldSetFlags()[9] ? this.ADDRESS_CARE_OF : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.ADDRESS_SUPPLIED_COMPANY_NAME = fieldSetFlags()[10] ? this.ADDRESS_SUPPLIED_COMPANY_NAME : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.ADDRESS_PO_BOX = fieldSetFlags()[11] ? this.ADDRESS_PO_BOX : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.FORMAT_OF_SUPPLY = fieldSetFlags()[12] ? this.FORMAT_OF_SUPPLY : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.MIGRATION_FLAG = fieldSetFlags()[13] ? this.MIGRATION_FLAG : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.DATE_OF_RESTORE = fieldSetFlags()[14] ? this.DATE_OF_RESTORE : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.TAPE_REFERENCE_NUMBER = fieldSetFlags()[15] ? this.TAPE_REFERENCE_NUMBER : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.entity = fieldSetFlags()[16] ? this.entity : (com.equifax.fabric.uk.purposing.companies.companyregisterlegacy.latest.standardisedfields.entity.entityFields) defaultValue(fields()[16]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
